<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<!-- 根节点,定义数据访问接口 -->
<mapper namespace="com.Hu.TBLBasedLearing.dao.TeacherMapper"> 
 	
 	<!-- 定义数据库和实体的映射关系 -->
    <resultMap id="resultMap" type="com.Hu.TBLBasedLearing.entity.Group"> 
        <id property="GroupID" column="GroupID"/> 
        <result property="GroupName" 	column="GroupName"/> 
        <result property="CreateDate" 	column="CreateDate"/> 
        <result property="DismissDate" 		column="DismissDate"/> 
     	<result property="TeacherID" 		column="TeacherID"/> 
        <result property="ClassID" 		column="ClassID"/> 
        <result property="GroupLeaderID" 		column="GroupLeaderID"/>    
         <result property="GroupLeader" 		column="UserName"/>    
         <result property="GroupLeaderNo" 		column="StudentNo"/>  
         <result property="ClassName" 		column="ClassName"/>  
    </resultMap>
 	<!-- 定义数据库和实体的映射关系 -->
    <resultMap id="taskResultMap" type="com.Hu.TBLBasedLearing.entity.Task"> 
        <id property="TaskID" 			column="TaskID"/> 
        <result property="TaskDetails" 	column="TaskDetails"/> 
        <result property="TeacherID" 	column="TeacherID"/> 
     	<result property="Status" 		column="Status"/> 
        <result property="CreateDate" 	column="CreateDate"/> 
        <result property="EndDate" 		column="EndDate"/>          
        <result property="Level" 		column="Level"/>    
        <result property="TeacherName" 		column="TeacherName"/>  
        <result property="TaskType" 		column="TaskType"/>  
        <result property="ClassId" 		column="ClassId"/>  
        <result property="Purpose" 		column="Purpose"/>  
    </resultMap>
        <resultMap id="statisticResultMap" type="com.Hu.TBLBasedLearing.entity.Statistic"> 
        <result property="p0" 	column="p0"/> 
        <result property="p1" 	column="p1"/> 
     	<result property="p2" 		column="p2"/> 
        <result property="p3" 	column="p3"/> 
        <result property="p4" 		column="p4"/>          
        <result property="p5" 		column="p5"/>    
        <result property="p6" 		column="p6"/> 
    </resultMap>
    
    <!-- 根据老师ID查询分组表 --> 
    <select id="getGroupByUserId" resultType="com.Hu.TBLBasedLearing.entity.Group" resultMap="resultMap">
	    <![CDATA[SELECT g.*,u.UserName,u.StudentNo,c.ClassName 
	    from grouptable g left join usertable u on g.GroupLeaderID = u.UserId 
	    				  left join classtable c on g.ClassID = c.ClassID
	         WHERE TeacherID=#{userId}]]>
    </select> 
    
        <!-- 修改分组信息 --> 
    <select id="changeGroup" >
	    <![CDATA[update usertable set GroupID=null WHERE GroupID = #{groupId};
		update usertable set GroupID=#{groupId} WHERE UserID in]]>
		<foreach collection="users" item="userid" index="index" open="(" separator="," close=");">  
            #{userid} 
        </foreach> 
       
		 <![CDATA[DELETE from usergroup where GroupID = #{groupId};
		INSERT into usergroup(UserID,GroupID,JoinDate) VALUES ]]>
		<foreach collection="users" item="userid" separator=",">  
            (#{userid},#{groupId},NOW())  
        </foreach>  

    </select> 
    
    <!-- 清空分组信息 --> 
    <select id="clearGroup" >
	    <![CDATA[update usertable set GroupID=null WHERE GroupID = #{groupId};
		DELETE from usergroup where GroupID = #{groupId}
	]]>
    </select> 
    
        <!-- 删除空白分组 --> 
    <select id="tryDeleteGroup" >
	    <![CDATA[DELETE from grouptable where GroupID = #{groupId};
	    DELETE FROM taskgroup where GroupID = #{groupId}
	]]>
    </select> 
    
        <!-- 删除任务 --> 
    <select id="DeleteTask" >
	    <![CDATA[DELETE from tasktable where TaskId = #{taskId};
	    DELETE FROM taskgroup where TaskId = #{taskId}
	]]>
    </select> 
    
    <!-- 获取所有任务信息 --> 
    <select id="getTaskList" resultType="com.Hu.TBLBasedLearing.entity.Task" resultMap="taskResultMap">
	    <![CDATA[SELECT * from tasktable
				where tasktable.TeacherID = #{userId}]]>
    </select> 
    
        <!-- 获取统计数据 --> 
    <select id="getStatistic" resultType="com.Hu.TBLBasedLearing.entity.Statistic" resultMap="statisticResultMap">
	    <![CDATA[select sum(case when Score>0 and Score <= 40 then 1 else 0 end) as 'p0',
sum(case when Score>41 and Score <= 50 then 1 else 0 end) as 'p1',
sum(case when Score>51 and Score <= 60 then 1 else 0 end) as 'p2',
sum(case when Score>61 and Score <= 70 then 1 else 0 end) as 'p3',
sum(case when Score>71 and Score <= 80 then 1 else 0 end) as 'p4',
sum(case when Score>81 and Score <= 90 then 1 else 0 end) as 'p5',
sum(case when Score>91 and Score <= 100 then 1 else 0 end) as 'p6'
FROM taskuser WHERE Score is not null and UserID in (SELECT UserID from usertable WHERE ClassID=(SELECT ClassID FROM usertable where UserID = #{teacherId}))
]]>
    </select> 
    
    <!-- 根据学生ID查询分组信息 --> 
    <select id="getGroupByStuUserId" resultType="com.Hu.TBLBasedLearing.entity.Group" resultMap="resultMap">
	    <![CDATA[select g.GroupID,g.GroupName,g.CreateDate,g.DismissDate,g.TeacherID  FROM grouptable g	INNER JOIN usertable u ON g.GroupID = u.GroupID 
				WHERE
				u.UserID = #{userId}]]>
    </select> 
     <!-- 新增分组 --> 
    <select id="addGroup" >
	    <![CDATA[INSERT into grouptable(GroupName,ClassID,CreateDate,TeacherID) VALUES(#{groupName},#{classId},now(),#{userId}) 
	]]>
    </select> 
        <!-- 新增任务 --> 
    <select id="addTask" >
	    <![CDATA[INSERT into tasktable(TaskName,TaskDetails,TeacherID,Status,CreateDate,EndDate,purpose,tasktype,classId) VALUES(#{taskName},#{taskDetails},#{userId},'未提交',now(),#{enddate},#{purpose},#{taskType},#{classId}) 
	]]>
    </select>
       
    <!-- 根据老师ID查询分组表 和是否在taskId对应的任务中 --> 
    <select id="getgrouplistbytaskid" resultType="com.Hu.TBLBasedLearing.entity.Group" resultMap="resultMap">
	    <![CDATA[SELECT g.*,c.ClassName ,
				(CASE 
				WHEN tg.ID is not null THEN
					'yes'
				ELSE
					'no'
			END) AS GroupLeader
	    from grouptable g 
	    				  left join classtable c on g.ClassID = c.ClassID
								LEFT JOIN (select * from taskgroup where TaskID=#{taskId}) tg on tg.GroupID = g.GroupID
	         WHERE TeacherID=#{userID}]]>
    </select> 
    
      <!-- 清空任务分配的小组 --> 
    <select id="clearTask" >
	    <![CDATA[
		DELETE from taskgroup where TaskId = #{taskId}
	]]>
    </select> 
    
            <!-- 修改任务分组信息 --> 
    <select id="changeTaskToGroup" >
		 <![CDATA[DELETE from taskgroup where TaskId = #{taskId};
		INSERT into taskgroup(taskId,GroupID,IssueDate) VALUES ]]>
		<foreach collection="groups" item="groupid" separator=",">  
            (#{taskId},#{groupid},NOW())  
        </foreach>  

    </select> 
    
</mapper>