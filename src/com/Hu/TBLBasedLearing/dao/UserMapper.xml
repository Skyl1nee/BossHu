<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<!-- 根节点,定义数据访问接口 -->
<mapper namespace="com.Hu.TBLBasedLearing.dao.UserMapper"> 
 	
 	<!-- 定义数据库和实体的映射关系 -->
    <resultMap id="resultMap" type="com.Hu.TBLBasedLearing.entity.User"> 
        <id property="UserID" column="UserID"/> 
        <result property="UserName" 	column="UserName"/> 
        <result property="Password" 	column="Password"/> 
        <result property="Gender" 		column="Gender"/> 
     	<result property="RoleID" 		column="RoleID"/> 
        <result property="GroupID" 		column="GroupID"/> 
        <result property="ClassID" 		column="ClassID"/>          
        <result property="RoleName" 		column="RoleName"/>    
        <result property="ClassName" 		column="ClassName"/>    
         <result property="StudentNo" 		column="StudentNo"/>  
    </resultMap>
    <!-- 根据用户名查询用户 --> 
    <select id="FindPwdByname" resultType="com.Hu.TBLBasedLearing.entity.User" resultMap="resultMap">
	    <![CDATA[SELECT * from usertable left join
	         WHERE userName=#{UserName}]]>
    </select> 
    
    <select id="FindUser" resultType="com.Hu.TBLBasedLearing.entity.User" resultMap="resultMap">
	    <![CDATA[SELECT *,RoleName from usertable u left join roletable r on r.RoleID = u.RoleID left join classtable c on u.ClassID = c.ClassID
	         WHERE userName=#{0} and Password=#{1}]]>
    </select> 
    <insert id="Register" parameterType="com.Hu.TBLBasedLearing.entity.User">
    	<![CDATA[
            insert into usertable
            	(UserName,Password,Gender,RoleID,GroupID,ClassID,StudentNo)
            values
            	(#{UserName},#{Password},#{Gender},#{RoleID},#{ClassID},#{GroupID},#{StudentNo})
        ]]>
    </insert>
    <update id="updatepwd">
    	<![CDATA[ update usertable set Password = #{Password}
	         WHERE UserID=#{UserID}]]>
    </update>
     <update id="updateInfo">
    	<![CDATA[ update usertable set Gender = #{Gender},ClassID = #{ClassID},StudentNo= #{StudentNo}
	         WHERE UserID=#{UserID}]]>
    </update>
    
          <!-- 根据老师ID查询学生列表 （GroupName as RoleName）--> 
    <select id="getStuByUserId" resultType="com.Hu.TBLBasedLearing.entity.User" resultMap="resultMap">
	    <![CDATA[
    select u.*,c.ClassName,GroupName as RoleName FROM usertable u 
    LEFT JOIN classtable c on u.ClassID = c.ClassID 
    left JOIN grouptable g on g.GroupId = u.GroupId
    WHERE u.ClassID IN(SELECT ClassID FROM usertable where userid =#{0}) AND RoleID = '1' and (u.GroupId =#{1} or u.GroupId is null)]]>
    </select> 
</mapper>